{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>   </p> <p>MISP modules are autonomous modules that can be used for expansion and other services in MISP.</p> <p>The modules are written in Python 3 following a simple API interface. The objective is to ease the extensions of MISP functionalities without modifying core components. The API is available via a simple REST API which is independent from MISP installation or configuration.</p> <p>MISP modules support is included in MISP starting from version <code>2.4.28</code>.</p> <p>For more information: Extending MISP with Python modules slides from MISP training.</p>"},{"location":"#existing-misp-modules","title":"Existing MISP modules","text":""},{"location":"#expansion-modules","title":"Expansion modules","text":"<ul> <li>Backscatter.io - a hover and expansion module to expand an IP address with mass-scanning observations.</li> <li>BGP Ranking - a hover and expansion module to expand an AS number with the ASN description, its history, and position in BGP Ranking.</li> <li>BTC scam check - An expansion hover module to instantly check if a BTC address has been abused.</li> <li>BTC transactions - An expansion hover module to get a blockchain balance and the transactions from a BTC address in MISP.</li> <li>CIRCL Passive DNS - a hover and expansion module to expand hostname and IP addresses with passive DNS information.</li> <li>CIRCL Passive SSL - a hover and expansion module to expand IP addresses with the X.509 certificate seen.</li> <li>countrycode - a hover module to tell you what country a URL belongs to.</li> <li>CrowdStrike Falcon - an expansion module to expand using CrowdStrike Falcon Intel Indicator API.</li> <li>CVE - a hover module to give more information about a vulnerability (CVE).</li> <li>CVE advanced - An expansion module to query the CIRCL CVE search API for more information about a vulnerability (CVE).</li> <li>Cuckoo submit - A hover module to submit malware sample, url, attachment, domain to Cuckoo Sandbox.</li> <li>DBL Spamhaus - a hover module to check Spamhaus DBL for a domain name.</li> <li>DNS - a simple module to resolve MISP attributes like hostname and domain to expand IP addresses attributes.</li> <li>docx-enrich - an enrichment module to get text out of Word document into MISP (using free-text parser).</li> <li>DomainTools - a hover and expansion module to get information from DomainTools whois.</li> <li>EUPI - a hover and expansion module to get information about an URL from the Phishing Initiative project.</li> <li>EQL - an expansion module to generate event query language (EQL) from an attribute. Event Query Language</li> <li>Farsight DNSDB Passive DNS - a hover and expansion module to expand hostname and IP addresses with passive DNS information.</li> <li>GeoIP - a hover and expansion module to get GeoIP information from geolite/maxmind.</li> <li>Greynoise - a hover to get information from greynoise.</li> <li>hashdd - a hover module to check file hashes against hashdd.com including NSLR dataset.</li> <li>hibp - a hover module to lookup against Have I Been Pwned?</li> <li>intel471 - an expansion module to get info from Intel471.</li> <li>IPASN - a hover and expansion to get the BGP ASN of an IP address.</li> <li>iprep - an expansion module to get IP reputation from packetmail.net.</li> <li>Joe Sandbox submit - Submit files and URLs to Joe Sandbox.</li> <li>Joe Sandbox query - Query Joe Sandbox with the link of an analysis and get the parsed data.</li> <li>macaddress.io - a hover module to retrieve vendor details and other information regarding a given MAC address or an OUI from MAC address Vendor Lookup. See integration tutorial here.</li> <li>macvendors - a hover module to retrieve mac vendor information.</li> <li>ocr-enrich - an enrichment module to get OCRized data from images into MISP.</li> <li>ods-enrich - an enrichment module to get text out of OpenOffice spreadsheet document into MISP (using free-text parser).</li> <li>odt-enrich - an enrichment module to get text out of OpenOffice document into MISP (using free-text parser).</li> <li>onyphe - a modules to process queries on Onyphe.</li> <li>onyphe_full - a modules to process full queries on Onyphe.</li> <li>OTX - an expansion module for OTX.</li> <li>passivetotal - a passivetotal module that queries a number of different PassiveTotal datasets.</li> <li>pdf-enrich - an enrichment module to extract text from PDF into MISP (using free-text parser).</li> <li>pptx-enrich - an enrichment module to get text out of PowerPoint document into MISP (using free-text parser).</li> <li>qrcode - a module decode QR code, barcode and similar codes from an image and enrich with the decoded values.</li> <li>rbl - a module to get RBL (Real-Time Blackhost List) values from an attribute.</li> <li>reversedns - Simple Reverse DNS expansion service to resolve reverse DNS from MISP attributes.</li> <li>securitytrails - an expansion module for securitytrails.</li> <li>shodan - a minimal shodan expansion module.</li> <li>Sigma queries - Experimental expansion module querying a sigma rule to convert it into all the available SIEM signatures.</li> <li>Sigma syntax validator - Sigma syntax validator.</li> <li>sourcecache - a module to cache a specific link from a MISP instance.</li> <li>STIX2 pattern syntax validator - a module to check a STIX2 pattern syntax.</li> <li>ThreatCrowd - an expansion module for ThreatCrowd.</li> <li>threatminer - an expansion module to expand from ThreatMiner.</li> <li>urlhaus - Query urlhaus to get additional data about a domain, hash, hostname, ip or url.</li> <li>urlscan - an expansion module to query urlscan.io.</li> <li>virustotal - an expansion module to query the VirusTotal API with a high request rate limit required. (More details about the API: here)</li> <li>virustotal_public - an expansion module to query the VirusTotal API with a public key and a low request rate limit. (More details about the API: here)</li> <li>VMray - a module to submit a sample to VMray.</li> <li>VulnDB - a module to query VulnDB.</li> <li>Vulners - an expansion module to expand information about CVEs using Vulners API.</li> <li>whois - a module to query a local instance of uwhois.</li> <li>wikidata - a wikidata expansion module.</li> <li>xforce - an IBM X-Force Exchange expansion module.</li> <li>xlsx-enrich - an enrichment module to get text out of an Excel document into MISP (using free-text parser).</li> <li>YARA query - a module to create YARA rules from single hash attributes.</li> <li>YARA syntax validator - YARA syntax validator.</li> </ul>"},{"location":"#export-modules","title":"Export modules","text":"<ul> <li>CEF module to export Common Event Format (CEF).</li> <li>Cisco FireSight Manager ACL rule module to export as rule for the Cisco FireSight manager ACL.</li> <li>GoAML export module to export in GoAML format.</li> <li>Lite Export module to export a lite event.</li> <li>Mass EQL Export module to export applicable attributes from an event to a mass EQL query.</li> <li>PDF export module to export an event in PDF.</li> <li>Nexthink query format module to export in Nexthink query format.</li> <li>osquery module to export in osquery query format.</li> <li>ThreatConnect module to export in ThreatConnect CSV format.</li> <li>ThreatStream module to export in ThreatStream format.</li> </ul>"},{"location":"#import-modules","title":"Import modules","text":"<ul> <li>CSV import Customizable CSV import module.</li> <li>Cuckoo JSON Cuckoo JSON import.</li> <li>Email Import Email import module for MISP to import basic metadata.</li> <li>GoAML import Module to import GoAML XML format.</li> <li>Joe Sandbox import Parse data from a Joe Sandbox json report.</li> <li>OCR Optical Character Recognition (OCR) module for MISP to import attributes from images, scan or faxes.</li> <li>OpenIOC OpenIOC import based on PyMISP library.</li> <li>ThreatAnalyzer - An import module to process ThreatAnalyzer archive.zip/analysis.json sandbox exports.</li> <li>VMRay - An import module to process VMRay export.</li> </ul>"},{"location":"#how-to-contribute-your-own-module","title":"How to contribute your own module?","text":"<p>Fork the project, add your module, test it and make a pull-request. Modules can be also private as you can add a module in your own MISP installation. For further information please see Contribute.</p>"},{"location":"#licenses","title":"Licenses","text":"<p>For further Information see also the license file.</p>"},{"location":"contribute/","title":"Contribute","text":""},{"location":"contribute/#how-to-add-your-own-misp-modules","title":"How to add your own MISP modules?","text":"<p>Create your module in misp_modules/modules/expansion/, misp_modules/modules/export_mod/, or misp_modules/modules/import_mod/. The module should have at minimum three functions:</p> <ul> <li>introspection function that returns a dict of the supported attributes (input and output) by your expansion module.</li> <li>handler function which accepts a JSON document to expand the values and return a dictionary of the expanded values.</li> <li>version function that returns a dict with the version and the associated meta-data including potential configurations required of the module.</li> </ul> <p>Don't forget to return an error key and value if an error is raised to propagate it to the MISP user-interface.</p> <p>Your module's script name should also be added in the <code>__all__</code> list of <code>&lt;module type folder&gt;/__init__.py</code> in order for it to be loaded.</p> <pre><code>...\n    # Checking for required value\n    if not request.get('ip-src'):\n        # Return an error message\n        return {'error': \"A source IP is required\"}\n...\n</code></pre>"},{"location":"contribute/#introspection","title":"introspection","text":"<p>The function that returns a dict of the supported attributes (input and output) by your expansion module.</p> <pre><code>mispattributes = {'input': ['link', 'url'],\n                  'output': ['attachment', 'malware-sample']}\n\ndef introspection():\n    return mispattributes\n</code></pre>"},{"location":"contribute/#version","title":"version","text":"<p>The function that returns a dict with the version and the associated meta-data including potential configurations required of the module.</p>"},{"location":"contribute/#additional-configuration-values","title":"Additional Configuration Values","text":"<p>If your module requires additional configuration (to be exposed via the MISP user-interface), you can define those in the moduleconfig value returned by the version function.</p> <pre><code># config fields that your code expects from the site admin\nmoduleconfig = [\"apikey\", \"event_limit\"]\n\ndef version():\n    moduleinfo['config'] = moduleconfig\n    return moduleinfo\n</code></pre> <p>When you do this a config array is added to the meta-data output containing all the potential configuration values:</p> <pre><code>\"meta\": {\n      \"description\": \"PassiveTotal expansion service to expand values with multiple Passive DNS sources\",\n      \"config\": [\n        \"username\",\n        \"password\"\n      ],\n      \"module-type\": [\n        \"expansion\",\n        \"hover\"\n      ],\n\n...\n</code></pre> <p>If you want to use the configuration values set in the web interface they are stored in the key <code>config</code> in the JSON object passed to the handler.</p> <pre><code>def handler(q=False):\n\n    # Check if we were given a configuration\n    config = q.get(\"config\", {})\n\n    # Find out if there is a username field\n    username = config.get(\"username\", None)\n</code></pre>"},{"location":"contribute/#handler","title":"handler","text":"<p>The function which accepts a JSON document to expand the values and return a dictionary of the expanded values.</p> <pre><code>def handler(q=False):\n    \"Fully functional rot-13 encoder\"\n    if q is False:\n        return False\n    request = json.loads(q)\n    src = request.get('ip-src')\n    if src is None:\n        # Return an error message\n        return {'error': \"A source IP is required\"}\n    else:\n        return {'results':\n                codecs.encode(src, \"rot-13\")}\n</code></pre>"},{"location":"contribute/#export-module","title":"export module","text":"<p>For an export module, the <code>request[\"data\"]</code> object corresponds to a list of events (dictionaries) to handle.</p> <p>Iterating over events attributes is performed using their <code>Attribute</code> key.</p> <pre><code>...\nfor event in request[\"data\"]:\n        for attribute in event[\"Attribute\"]:\n          # do stuff w/ attribute['type'], attribute['value'], ...\n...\n\n### Returning Binary Data\n\nIf you want to return a file or other data you need to add a data attribute.\n\n~~~python\n{\"results\": {\"values\": \"filename.txt\",\n             \"types\": \"attachment\",\n             \"data\"  : base64.b64encode(&lt;ByteIO&gt;)  # base64 encode your data first\n             \"comment\": \"This is an attachment\"}}\n</code></pre> <p>If the binary file is malware you can use 'malware-sample' as the type. If you do this the malware sample will be automatically zipped and password protected ('infected') after being uploaded.</p> <pre><code>{\"results\": {\"values\": \"filename.txt\",\n             \"types\": \"malware-sample\",\n             \"data\"  : base64.b64encode(&lt;ByteIO&gt;)  # base64 encode your data first\n             \"comment\": \"This is an attachment\"}}\n</code></pre> <p>To learn more about how data attributes are processed you can read the processing code here.</p>"},{"location":"contribute/#module-type","title":"Module type","text":"<p>A MISP module can be of four types:</p> <ul> <li>expansion - service related to an attribute that can be used to extend and update an existing event.</li> <li>hover - service related to an attribute to provide additional information to the users without updating the event.</li> <li>import - service related to importing and parsing an external object that can be used to extend an existing event.</li> <li>export - service related to exporting an object, event, or data.</li> </ul> <p>module-type is an array where the list of supported types can be added.</p>"},{"location":"contribute/#testing-your-modules","title":"Testing your modules?","text":"<p>MISP uses the modules function to discover the available MISP modules and their supported MISP attributes:</p> <pre><code>% curl -s http://127.0.0.1:6666/modules | jq .\n[\n  {\n    \"name\": \"passivetotal\",\n    \"type\": \"expansion\",\n    \"mispattributes\": {\n      \"input\": [\n        \"hostname\",\n        \"domain\",\n        \"ip-src\",\n        \"ip-dst\"\n      ],\n      \"output\": [\n        \"ip-src\",\n        \"ip-dst\",\n        \"hostname\",\n        \"domain\"\n      ]\n    },\n    \"meta\": {\n      \"description\": \"PassiveTotal expansion service to expand values with multiple Passive DNS sources\",\n      \"config\": [\n        \"username\",\n        \"password\"\n      ],\n      \"author\": \"Alexandre Dulaunoy\",\n      \"version\": \"0.1\"\n    }\n  },\n  {\n    \"name\": \"sourcecache\",\n    \"type\": \"expansion\",\n    \"mispattributes\": {\n      \"input\": [\n        \"link\"\n      ],\n      \"output\": [\n        \"link\"\n      ]\n    },\n    \"meta\": {\n      \"description\": \"Module to cache web pages of analysis reports, OSINT sources. The module returns a link of the cached page.\",\n      \"author\": \"Alexandre Dulaunoy\",\n      \"version\": \"0.1\"\n    }\n  },\n  {\n    \"name\": \"dns\",\n    \"type\": \"expansion\",\n    \"mispattributes\": {\n      \"input\": [\n        \"hostname\",\n        \"domain\"\n      ],\n      \"output\": [\n        \"ip-src\",\n        \"ip-dst\"\n      ]\n    },\n    \"meta\": {\n      \"description\": \"Simple DNS expansion service to resolve IP address from MISP attributes\",\n      \"author\": \"Alexandre Dulaunoy\",\n      \"version\": \"0.1\"\n    }\n  }\n]\n</code></pre> <p>The MISP module service returns the available modules in a JSON array containing each module name along with their supported input attributes.</p> <p>Based on this information, a query can be built in a JSON format and saved as body.json:</p> <pre><code>{\n  \"hostname\": \"www.foo.be\",\n  \"module\": \"dns\"\n}\n</code></pre> <p>Then you can POST this JSON format query towards the MISP object server:</p> <pre><code>curl -s http://127.0.0.1:6666/query -H \"Content-Type: application/json\" --data @body.json -X POST\n</code></pre> <p>The module should output the following JSON:</p> <pre><code>{\n  \"results\": [\n    {\n      \"types\": [\n        \"ip-src\",\n        \"ip-dst\"\n      ],\n      \"values\": [\n        \"188.65.217.78\"\n      ]\n    }\n  ]\n}\n</code></pre> <p>It is also possible to restrict the category options of the resolved attributes by passing a list of categories along (optional):</p> <pre><code>{\n  \"results\": [\n    {\n      \"types\": [\n        \"ip-src\",\n        \"ip-dst\"\n      ],\n      \"values\": [\n        \"188.65.217.78\"\n      ],\n      \"categories\": [\n        \"Network activity\",\n        \"Payload delivery\"\n      ]\n    }\n  ]\n}\n</code></pre> <p>For both the type and the category lists, the first item in the list will be the default setting on the interface.</p>"},{"location":"contribute/#enable-your-module-in-the-web-interface","title":"Enable your module in the web interface","text":"<p>For a module to be activated in the MISP web interface it must be enabled in the \"Plugin Settings.</p> <p>Go to \"Administration &gt; Server Settings\" in the top menu - Go to \"Plugin Settings\" in the top \"tab menu bar\" - Click on the name of the type of module you have created to expand the list of plugins to show your module. - Find the name of your plugin's \"enabled\" value in the Setting Column. \"Plugin.[MODULE NAME]_enabled\" - Double click on its \"Value\" column</p> <pre><code>Priority        Setting                         Value   Description                             Error Message\nRecommended     Plugin.Import_ocr_enabled       false   Enable or disable the ocr module.       Value not set.\n</code></pre> <ul> <li>Use the drop-down to set the enabled value to 'true'</li> </ul> <pre><code>Priority        Setting                         Value   Description                             Error Message\nRecommended     Plugin.Import_ocr_enabled       true   Enable or disable the ocr module.       Value not set.\n</code></pre>"},{"location":"contribute/#set-any-other-required-settings-for-your-module","title":"Set any other required settings for your module","text":"<p>In this same menu set any other plugin settings that are required for testing.</p>"},{"location":"contribute/#documentation","title":"Documentation","text":"<p>In order to provide documentation about some modules that require specific input / output / configuration, the doc directory contains detailed information about the general purpose, requirements, features, input and output of each of these modules:</p> <ul> <li>***description** - quick description of the general purpose of the module, as the one given by the moduleinfo</li> <li>requirements - special libraries needed to make the module work</li> <li>features - description of the way to use the module, with the required MISP features to make the module give the intended result</li> <li>references - link(s) giving additional information about the format concerned in the module</li> <li>input - description of the format of data used in input</li> <li>output - description of the format given as the result of the module execution</li> </ul> <p>In addition to the module documentation please add your module to docs/index.md.</p> <p>There are also complementary slides for the creation of MISP modules.</p>"},{"location":"contribute/#tips-for-developers-creating-modules","title":"Tips for developers creating modules","text":"<p>Download a pre-built virtual image from the MISP training materials.</p> <ul> <li>Create a Host-Only adapter in VirtualBox</li> <li>Set your Misp OVA to that Host-Only adapter</li> <li>Start the virtual machine</li> <li>Get the IP address of the virutal machine</li> <li>SSH into the machine (Login info on training page)</li> <li>Go into the misp-modules directory</li> </ul> <pre><code>cd /usr/local/src/misp-modules\n</code></pre> <p>Set the git repo to your fork and checkout your development branch. If you SSH'ed in as the misp user you will have to use sudo.</p> <pre><code>sudo git remote set-url origin https://github.com/YourRepo/misp-modules.git\nsudo git pull\nsudo git checkout MyModBranch\n</code></pre> <p>Remove the contents of the build directory and re-install misp-modules.</p> <pre><code>sudo rm -fr build/*\nsudo pip3 install --upgrade .\n</code></pre> <p>SSH in with a different terminal and run <code>misp-modules</code> with debugging enabled.</p> <pre><code>sudo killall misp-modules\nmisp-modules -d\n</code></pre> <p>In your original terminal you can now run your tests manually and see any errors that arrive</p> <pre><code>cd tests/\ncurl -s http://127.0.0.1:6666/query -H \"Content-Type: application/json\" --data @MY_TEST_FILE.json -X POST\ncd ../\n</code></pre>"},{"location":"expansion/","title":"Expansion Modules","text":""},{"location":"expansion/#apiosintds","title":"apiosintds","text":"<p>On demand query API for OSINT.digitalside.it project. - features:</p>  <p>The module simply queries the API of OSINT.digitalside.it with a domain, ip, url or hash attribute.</p> <p>The result of the query is then parsed to extract additional hashes or urls. A module parameters also allows to parse the hashes related to the urls.</p> <p>Furthermore, it is possible to cache the urls and hashes collected over the last 7 days by OSINT.digitalside.it - input: A domain, ip, url or hash attribute. - output: Hashes and urls resulting from the query to OSINT.digitalside.it - references: https://osint.digitalside.it/#About - requirements: The apiosintDS python library to query the OSINT.digitalside.it API.</p>"},{"location":"expansion/#apivoid","title":"apivoid","text":"<p>Module to query APIVoid with some domain attributes. - features:</p>  <p>This module takes a domain name and queries API Void to get the related DNS records and the SSL certificates. It returns then those pieces of data as MISP objects that can be added to the event.</p> <p>To make it work, a valid API key and enough credits to proceed 2 queries (0.06 + 0.07 credits) are required. - input: A domain attribute. - output: DNS records and SSL certificates related to the domain. - references: https://www.apivoid.com/ - requirements: A valid APIVoid API key with enough credits to proceed 2 queries</p>"},{"location":"expansion/#assemblyline_query","title":"assemblyline_query","text":"<p>A module tu query the AssemblyLine API with a submission ID to get the submission report and parse it. - features:</p>  <p>The module requires the address of the AssemblyLine server you want to query as well as your credentials used for this instance. Credentials include the used-ID and an API key or the password associated to the user-ID.</p> <p>The submission ID extracted from the submission link is then used to query AssemblyLine and get the full submission report. This report is parsed to extract file objects and the associated IPs, domains or URLs the files are connecting to.</p> <p>Some more data may be parsed in the future. - input: Link of an AssemblyLine submission report. - output: MISP attributes &amp; objects parsed from the AssemblyLine submission. - references: https://www.cyber.cg.ca/en/assemblyline - requirements: assemblyline_client: Python library to query the AssemblyLine rest API.</p>"},{"location":"expansion/#assemblyline_submit","title":"assemblyline_submit","text":"<p>A module to submit samples and URLs to AssemblyLine for advanced analysis, and return the link of the submission. - features:</p>  <p>The module requires the address of the AssemblyLine server you want to query as well as your credentials used for this instance. Credentials include the user-ID and an API key or the password associated to the user-ID.</p> <p>If the sample or url is correctly submitted, you get then the link of the submission. - input: Sample, or url to submit to AssemblyLine. - output: Link of the report generated in AssemblyLine. - references: https://www.cyber.gc.ca/en/assemblyline - requirements: assemblyline_client: Python library to query the AssemblyLine rest API.</p>"},{"location":"expansion/#backscatter_io","title":"backscatter_io","text":"<p>Query backscatter.io (https://backscatter.io/). - features:</p>  <p>The module takes a source or destination IP address as input and displays the information known by backscatter.io. - input: IP addresses. - output: Text containing a history of the IP addresses especially on scanning based on backscatter.io information . - references: https://pypi.org/project/backscatter/ - requirements: backscatter python library</p>"},{"location":"expansion/#bgpranking","title":"bgpranking","text":"<p>Query BGP Ranking (https://bgpranking-ng.circl.lu/). - features:</p>  <p>The module takes an AS number attribute as input and displays its description as well as its ranking position in BGP Ranking for a given day. - input: Autonomous system number. - output: An asn object with its related bgp-ranking object. - references: https://github.com/D4-project/BGP-Ranking/ - requirements: pybgpranking python library</p>"},{"location":"expansion/#btc_scam_check","title":"btc_scam_check","text":"<p>An expansion hover module to query a special dns blacklist to check if a bitcoin address has been abused. - features:</p>  <p>The module queries a dns blacklist directly with the bitcoin address and get a response if the address has been abused. - input: btc address attribute. - output: Text to indicate if the BTC address has been abused. - references: https://btcblack.it/ - requirements: dnspython3: dns python library</p>"},{"location":"expansion/#btc_steroids","title":"btc_steroids","text":"<p>An expansion hover module to get a blockchain balance from a BTC address in MISP. - input:</p>  <p>btc address attribute. - output: Text to describe the blockchain balance and the transactions related to the btc address in input.</p>"},{"location":"expansion/#censys_enrich","title":"censys_enrich","text":"<p>An expansion module to enrich attributes in MISP by quering the censys.io API - features:</p>  <p>This module takes an IP, hostname or a certificate fingerprint and attempts to enrich it by querying the Censys API. - input: IP, domain or certificate fingerprint (md5, sha1 or sha256) - output: MISP objects retrieved from censys, including open ports, ASN, Location of the IP, x509 details - references: https://www.censys.io - requirements: API credentials to censys.io</p>"},{"location":"expansion/#circl_passivedns","title":"circl_passivedns","text":"<p>Module to access CIRCL Passive DNS. - features:</p>  <p>This module takes a hostname, domain or ip-address (ip-src or ip-dst) attribute as input, and queries the CIRCL Passive DNS REST API to get the asssociated passive dns entries and return them as MISP objects.</p> <p>To make it work a username and a password are thus required to authenticate to the CIRCL Passive DNS API. - input: Hostname, domain, or ip-address attribute. - ouput: Passive DNS objects related to the input attribute. - references: - https://www.circl.lu/services/passive-dns/ - https://datatracker.ietf.org/doc/draft-dulaunoy-dnsop-passive-dns-cof/ - requirements: - pypdns: Passive DNS python library - A CIRCL passive DNS account with username &amp; password</p>"},{"location":"expansion/#circl_passivessl","title":"circl_passivessl","text":"<p>Modules to access CIRCL Passive SSL. - features:</p>  <p>This module takes an ip-address (ip-src or ip-dst) attribute as input, and queries the CIRCL Passive SSL REST API to gather the related certificates and return the corresponding MISP objects.</p> <p>To make it work a username and a password are required to authenticate to the CIRCL Passive SSL API. - input: IP address attribute. - output: x509 certificate objects seen by the IP address(es). - references: https://www.circl.lu/services/passive-ssl/ - requirements: - pypssl: Passive SSL python library - A CIRCL passive SSL account with username &amp; password</p>"},{"location":"expansion/#countrycode","title":"countrycode","text":"<p>Module to expand country codes. - features:</p>  <p>The module takes a domain or a hostname as input, and returns the country it belongs to.</p> <p>For non country domains, a list of the most common possible extensions is used. - input: Hostname or domain attribute. - output: Text with the country code the input belongs to.</p>"},{"location":"expansion/#cpe","title":"cpe","text":"<p>An expansion module to query the CVE search API with a cpe code to get its related vulnerabilities. - features:</p>  <p>The module takes a cpe attribute as input and queries the CVE search API to get its related vulnerabilities. The list of vulnerabilities is then parsed and returned as vulnerability objects.</p> <p>Users can use their own CVE search API url by defining a value to the custom_API_URL parameter. If no custom API url is given, the default cve.circl.lu api url is used.</p> <p>In order to limit the amount of data returned by CVE serach, users can also the limit parameter. With the limit set, the API returns only the requested number of vulnerabilities, sorted from the highest cvss score to the lowest one. - input: CPE attribute. - output: The vulnerabilities related to the CPE. - references: https://cve.circl.lu/api/</p>"},{"location":"expansion/#crowdsec","title":"crowdsec","text":"<p>Hover module to lookup an IP in CrowdSec's CTI - features:</p>  <p>This module enables IP lookup from CrowdSec CTI API. It provides information about the IP, such as what kind of attacks it has been participant of as seen by CrowdSec's network. It also includes enrichment by CrowdSec like background noise score, aggressivity over time etc. - input: An IP address. - output: IP Lookup information from CrowdSec CTI API - references: - https://www.crowdsec.net/ - https://docs.crowdsec.net/docs/cti_api/getting_started - https://app.crowdsec.net/ - requirements: A CrowdSec CTI API key. Get yours by following https://docs.crowdsec.net/docs/cti_api/getting_started/#getting-an-api-key</p>"},{"location":"expansion/#crowdstrike_falcon","title":"crowdstrike_falcon","text":"<p>Module to query Crowdstrike Falcon. - features:</p>  <p>This module takes a MISP attribute as input to query a CrowdStrike Falcon API. The API returns then the result of the query with some types we map into compatible types we add as MISP attributes.</p> <p>Please note that composite attributes composed by at least one of the input types mentionned below (domains, IPs, hostnames) are also supported. - input: A MISP attribute included in the following list: - domain - email-attachment - email-dst - email-reply-to - email-src - email-subject - filename - hostname - ip-src - ip-dst - md5 - mutex - regkey - sha1 - sha256 - uri - url - user-agent - whois-registrant-email - x509-fingerprint-md5 - output: MISP attributes mapped after the CrowdStrike API has been queried, included in the following list: - hostname - email-src - email-subject - filename - md5 - sha1 - sha256 - ip-dst - ip-dst - mutex - regkey - url - user-agent - x509-fingerprint-md5 - references: https://www.crowdstrike.com/products/crowdstrike-falcon-faq/ - requirements: A CrowdStrike API access (API id &amp; key)</p>"},{"location":"expansion/#cuckoo_submit","title":"cuckoo_submit","text":"<p>An expansion module to submit files and URLs to Cuckoo Sandbox. - features:</p>  <p>The module takes a malware-sample, attachment, url or domain and submits it to Cuckoo Sandbox. The returned task id can be used to retrieve results when the analysis completed. - input: A malware-sample or attachment for files. A url or domain for URLs. - output: A text field containing 'Cuckoo task id: ' - references: - https://cuckoosandbox.org/ - https://cuckoo.sh/docs/ - requirements: Access to a Cuckoo Sandbox API and an API key if the API requires it. (api_url and api_key)"},{"location":"expansion/#cve","title":"cve","text":"<p>An expansion hover module to expand information about CVE id. - features:</p>  <p>The module takes a vulnerability attribute as input and queries the CIRCL CVE search API to get information about the vulnerability as it is described in the list of CVEs. - input: Vulnerability attribute. - output: Text giving information about the CVE related to the Vulnerability. - references: - https://cve.circl.lu/ - https://cve.mitre.org/</p>"},{"location":"expansion/#cve_advanced","title":"cve_advanced","text":"<p>An expansion module to query the CIRCL CVE search API for more information about a vulnerability (CVE). - features:</p>  <p>The module takes a vulnerability attribute as input and queries the CIRCL CVE search API to gather additional information.</p> <p>The result of the query is then parsed to return additional information about the vulnerability, like its cvss score or some references, as well as the potential related weaknesses and attack patterns.</p> <p>The vulnerability additional data is returned in a vulnerability MISP object, and the related additional information are put into weakness and attack-pattern MISP objects. - input: Vulnerability attribute. - output: Additional information about the vulnerability, such as its cvss score, some references, or the related weaknesses and attack patterns. - references: - https://cve.circl.lu - https://cve/mitre.org/</p>"},{"location":"expansion/#cytomic_orion","title":"cytomic_orion","text":"<p>An expansion module to enrich attributes in MISP by quering the Cytomic Orion API - features:</p>  <p>This module takes an MD5 hash and searches for occurrences of this hash in the Cytomic Orion database. Returns observed files and machines. - input: MD5, hash of the sample / malware to search for. - output: MISP objects with sightings of the hash in Cytomic Orion. Includes files and machines. - references: - https://www.vanimpe.eu/2020/03/10/integrating-misp-and-cytomic-orion/ - https://www.cytomicmodel.com/solutions/ - requirements: Access (license) to Cytomic Orion</p>"},{"location":"expansion/#dbl_spamhaus","title":"dbl_spamhaus","text":"<p>Module to check Spamhaus DBL for a domain name. - features:</p>  <p>This modules takes a domain or a hostname in input and queries the Domain Block List provided by Spamhaus to determine what kind of domain it is.</p> <p>DBL then returns a response code corresponding to a certain classification of the domain we display. If the queried domain is not in the list, it is also mentionned.</p> <p>Please note that composite MISP attributes containing domain or hostname are supported as well. - input: Domain or hostname attribute. - output: Information about the nature of the input. - references: https://www.spamhaus.org/faq/section/Spamhaus%20DBL - requirements: dnspython3: DNS python3 library</p>"},{"location":"expansion/#dns","title":"dns","text":"<p>A simple DNS expansion service to resolve IP address from domain MISP attributes. - features:</p>  <p>The module takes a domain of hostname attribute as input, and tries to resolve it. If no error is encountered, the IP address that resolves the domain is returned, otherwise the origin of the error is displayed.</p> <p>The address of the DNS resolver to use is also configurable, but if no configuration is set, we use the Google public DNS address (8.8.8.8).</p> <p>Please note that composite MISP attributes containing domain or hostname are supported as well. - input: Domain or hostname attribute. - output: IP address resolving the input. - requirements: dnspython3: DNS python3 library</p>"},{"location":"expansion/#docx_enrich","title":"docx_enrich","text":"<p>Module to extract freetext from a .docx document. - features:</p>  <p>The module reads the text contained in a .docx document. The result is passed to the freetext import parser so IoCs can be extracted out of it. - input: Attachment attribute containing a .docx document. - output: Text and freetext parsed from the document. - requirements: docx python library</p>"},{"location":"expansion/#domaintools","title":"domaintools","text":"<p>DomainTools MISP expansion module. - features:</p>  <p>This module takes a MISP attribute as input to query the Domaintools API. The API returns then the result of the query with some types we map into compatible types we add as MISP attributes.</p> <p>Please note that composite attributes composed by at least one of the input types mentionned below (domains, IPs, hostnames) are also supported. - input: A MISP attribute included in the following list: - domain - hostname - email-src - email-dst - target-email - whois-registrant-email - whois-registrant-name - whois-registrant-phone - ip-src - ip-dst - output: MISP attributes mapped after the Domaintools API has been queried, included in the following list: - whois-registrant-email - whois-registrant-phone - whois-registrant-name - whois-registrar - whois-creation-date - text - domain - references: https://www.domaintools.com/ - requirements: - Domaintools python library - A Domaintools API access (username &amp; apikey)</p>"},{"location":"expansion/#eql","title":"eql","text":"<p>EQL query generation for a MISP attribute. - features:</p>  <p>This module adds a new attribute to a MISP event containing an EQL query for a network or file attribute. - input: A filename or ip attribute. - output: Attribute containing EQL for a network or file attribute. - references: https://eql.readthedocs.io/en/latest/</p>"},{"location":"expansion/#eupi","title":"eupi","text":"<p>A module to query the Phishing Initiative service (https://phishing-initiative.lu). - features:</p>  <p>This module takes a domain, hostname or url MISP attribute as input to query the Phishing Initiative API. The API returns then the result of the query with some information about the value queried.</p> <p>Please note that composite attributes containing domain or hostname are also supported. - input: A domain, hostname or url MISP attribute. - output: Text containing information about the input, resulting from the query on Phishing Initiative. - references: https://phishing-initiative.eu/?lang=en - requirements: - pyeupi: eupi python library - An access to the Phishing Initiative API (apikey &amp; url)</p>"},{"location":"expansion/#farsight_passivedns","title":"farsight_passivedns","text":"<p>Module to access Farsight DNSDB Passive DNS. - features:</p>  <p>This module takes a domain, hostname or IP address MISP attribute as input to query the Farsight Passive DNS API.  The results of rdata and rrset lookups are then returned and parsed into passive-dns objects.</p> <p>An API key is required to submit queries to the API.  It is also possible to define a custom server URL, and to set a limit of results to get.  This limit is set for each lookup, which means we can have an up to the limit number of passive-dns objects resulting from an rdata query about an IP address, but an up to the limit number of passive-dns objects for each lookup queries about a domain or a hostname (== twice the limit). - input: A domain, hostname or IP address MISP attribute. - output: Passive-dns objects, resulting from the query on the Farsight Passive DNS API. - references: - https://www.farsightsecurity.com/ - https://docs.dnsdb.info/dnsdb-api/ - requirements: An access to the Farsight Passive DNS API (apikey)</p>"},{"location":"expansion/#geoip_asn","title":"geoip_asn","text":"<p> - descrption:</p>  <p>An expansion module to query a local copy of Maxmind's Geolite database with an IP address, in order to get information about its related AS number. - features: The module takes an IP address attribute as input and queries a local copy of the Maxmind's Geolite database to get information about the related AS number. - input: An IP address MISP attribute. - output: Text containing information about the AS number of the IP address. - references: https://www.maxmind.com/en/home - requirements: A local copy of Maxmind's Geolite database</p>"},{"location":"expansion/#geoip_city","title":"geoip_city","text":"<p>An expansion module to query a local copy of Maxmind's Geolite database with an IP address, in order to get information about the city where it is located. - features:</p>  <p>The module takes an IP address attribute as input and queries a local copy of the Maxmind's Geolite database to get information about the city where this IP address is located. - input: An IP address MISP attribute. - output: Text containing information about the city where the IP address is located. - references: https://www.maxmind.com/en/home - requirements: A local copy of Maxmind's Geolite database</p>"},{"location":"expansion/#geoip_country","title":"geoip_country","text":"<p>Module to query a local copy of Maxmind's Geolite database. - features:</p>  <p>This module takes an IP address MISP attribute as input and queries a local copy of the Maxmind's Geolite database to get information about the location of this IP address.</p> <p>Please note that composite attributes domain|ip are also supported. - input: An IP address MISP Attribute. - output: Text containing information about the location of the IP address. - references: https://www.maxmind.com/en/home - requirements: A local copy of Maxmind's Geolite database</p>"},{"location":"expansion/#google_search","title":"google_search","text":"<p> - descrption:</p>  <p>A hover module to get information about an url using a Google search. - features: The module takes an url as input to query the Google search API. The result of the query is then return as raw text. - input: An url attribute. - output: Text containing the result of a Google search on the input url. - references: https://github.com/abenassi/Google-Search-API - requirements: The python Google Search API library</p>"},{"location":"expansion/#greynoise","title":"greynoise","text":"<p>Module to query IP and CVE information from GreyNoise - features:</p>  <p>This module supports: 1) Query an IP from GreyNoise to see if it is internet background noise or a common business service 2) Query a CVE from GreyNoise to see the total number of internet scanners looking for the CVE in the last 7 days. - input: An IP address or CVE ID - output: IP Lookup information or CVE scanning profile for past 7 days - references: - https://greynoise.io/ - https://docs.greyniose.io/ - https://www.greynoise.io/viz/account/ - requirements: A Greynoise API key. Both Enterprise (Paid) and Community (Free) API keys are supported, however Community API users will only be able to perform IP lookups.</p>"},{"location":"expansion/#hashdd","title":"hashdd","text":"<p>A hover module to check hashes against hashdd.com including NSLR dataset. - features:</p>  <p>This module takes a hash attribute as input to check its known level, using the hashdd API. This information is then displayed. - input: A hash MISP attribute (md5). - output: Text describing the known level of the hash in the hashdd databases. - references: https://hashdd.com/</p>"},{"location":"expansion/#hashlookup","title":"hashlookup","text":"<p>An expansion module to query the CIRCL hashlookup services to find it if a hash is part of a known set such as NSRL. - features:</p>  <p>The module takes file hashes as input such as a MD5 or SHA1. It queries the public CIRCL.lu hashlookup service and return all the hits if the hashes are known in an existing dataset. The module can be configured with a custom hashlookup url if required. The module can be used an hover module but also an expansion model to add related MISP objects.</p> <ul> <li>input: File hashes (MD5, SHA1)</li> <li>output: Object with the filename associated hashes if the hash is part of a known set.</li> <li>references: https://www.circl.lu/services/hashlookup/</li> </ul>"},{"location":"expansion/#hibp","title":"hibp","text":"<p>Module to access haveibeenpwned.com API. - features:</p>  <p>The module takes an email address as input and queries haveibeenpwned.com API to find additional information about it. This additional information actually tells if any account using the email address has already been compromised in a data breach. - input: An email address - output: Additional information about the email address. - references: https://haveibeenpwned.com/</p>"},{"location":"expansion/#html_to_markdown","title":"html_to_markdown","text":"<p>Expansion module to fetch the html content from an url and convert it into markdown. - features:</p>  <p>The module take an URL as input and the HTML content is fetched from it. This content is then converted into markdown that is returned as text. - input: URL attribute. - output: Markdown content converted from the HTML fetched from the url. - requirements: The markdownify python library</p>"},{"location":"expansion/#hyasinsight","title":"hyasinsight","text":"<p>HYAS Insight integration to MISP provides direct, high volume access to HYAS Insight data. It enables investigators and analysts to understand and defend against cyber adversaries and their infrastructure. - features:</p>  <p>This Module takes the IP Address, Domain, URL, Email, Phone Number, MD5, SHA1, Sha256, SHA512 MISP Attributes as input to query the HYAS Insight API. The results of the HYAS Insight API are than are then returned and parsed into Hyas Insight Objects. </p> <p>An API key is required to submit queries to the HYAS Insight API.</p> <ul> <li>input: A MISP attribute of type IP Address(ip-src, ip-dst), Domain(hostname, domain), Email Address(email, email-src, email-dst, target-email, whois-registrant-email), Phone Number(phone-number, whois-registrant-phone), MDS(md5, x509-fingerprint-md5, ja3-fingerprint-md5, hassh-md5, hasshserver-md5), SHA1(sha1, x509-fingerprint-sha1), SHA256(sha256, x509-fingerprint-sha256), SHA512(sha512)</li> <li>output: Hyas Insight objects, resulting from the query on the HYAS Insight API.</li> <li>references: https://www.hyas.com/hyas-insight/</li> <li>requirements: A HYAS Insight API Key.</li> </ul>"},{"location":"expansion/#intel471","title":"intel471","text":"<p> - descrption:</p>  <p>An expansion module to query Intel471 in order to get additional information about a domain, ip address, email address, url or hash. - features: The module uses the Intel471 python library to query the Intel471 API with the value of the input attribute. The result of the query is then returned as freetext so the Freetext import parses it. - input: A MISP attribute whose type is included in the following list: - hostname - domain - url - ip-src - ip-dst - email-src - email-dst - target-email - whois-registrant-email - whois-registrant-name - md5 - sha1 - sha256 - output: Freetext - references: https://public.intel471.com/ - requirements: The intel471 python library</p>"},{"location":"expansion/#intelmq_eventdb","title":"intelmq_eventdb","text":"<p>Module to access intelmqs eventdb. - features:</p>  <p>/! EXPERIMENTAL MODULE, some features may not work /!\\</p> <p>This module takes a domain, hostname, IP address or Autonomous system MISP attribute as input to query the IntelMQ database. The result of the query gives then additional information about the input. - input: A hostname, domain, IP address or AS attribute. - output: Text giving information about the input using IntelMQ database. - references: - https://github.com/certtools/intelmq - https://intelmq.readthedocs.io/en/latest/Developers-Guide/ - requirements: - psycopg2: Python library to support PostgreSQL - An access to the IntelMQ database (username, password, hostname and database reference)</p>"},{"location":"expansion/#ipasn","title":"ipasn","text":"<p>Module to query an IP ASN history service (https://github.com/D4-project/IPASN-History). - features:</p>  <p>This module takes an IP address attribute as input and queries the CIRCL IPASN service. The result of the query is the latest asn related to the IP address, that is returned as a MISP object. - input: An IP address MISP attribute. - output: Asn object(s) objects related to the IP address used as input. - references: https://github.com/D4-project/IPASN-History - requirements: pyipasnhistory: Python library to access IPASN-history instance</p>"},{"location":"expansion/#ipinfo","title":"ipinfo","text":"<p>An expansion module to query ipinfo.io to gather more information on a given IP address. - features:</p>  <p>The module takes an IP address attribute as input and queries the ipinfo.io API. The geolocation information on the IP address is always returned.</p> <p>Depending on the subscription plan, the API returns different pieces of information then: - With a basic plan (free) you get the AS number and the AS organisation name concatenated in the <code>org</code> field. - With a paid subscription, the AS information is returned in the <code>asn</code> field with additional AS information, and depending on which plan the user has, you can also get information on the privacy method used to protect the IP address, the related domains, or the point of contact related to the IP address in case of an abuse.</p> <p>More information on the responses content is available in the documentation. - input: IP address attribute. - output: Additional information on the IP address, like its geolocation, the autonomous system it is included in, and the related domain(s). - references: https://ipinfo.io/developers - requirements: An ipinfo.io token</p>"},{"location":"expansion/#ipqs_fraud_and_risk_scoring","title":"ipqs_fraud_and_risk_scoring","text":"<p>IPQualityScore MISP Expansion Module for IP reputation, Email Validation, Phone Number Validation, Malicious Domain and Malicious URL Scanner. - features:</p>  <p>This Module takes the IP Address, Domain, URL, Email and Phone Number MISP Attributes as input to query the IPQualityScore API. The results of the IPQualityScore API are than returned as IPQS Fraud and Risk Scoring Object.  The object contains a copy of the enriched attribute with added tags presenting the verdict based on fraud score,risk score and other attributes from IPQualityScore. - input: A MISP attribute of type IP Address(ip-src, ip-dst), Domain(hostname, domain), URL(url, uri), Email Address(email, email-src, email-dst, target-email, whois-registrant-email) and Phone Number(phone-number, whois-registrant-phone). - output: IPQualityScore object, resulting from the query on the IPQualityScore API. - references: https://www.ipqualityscore.com/ - requirements: A IPQualityScore API Key.</p>"},{"location":"expansion/#iprep","title":"iprep","text":"<p>Module to query IPRep data for IP addresses. - features:</p>  <p>This module takes an IP address attribute as input and queries the database from packetmail.net to get some information about the reputation of the IP. - input: An IP address MISP attribute. - output: Text describing additional information about the input after a query on the IPRep API. - references: https://github.com/mahesh557/packetmail - requirements: An access to the packetmail API (apikey)</p>"},{"location":"expansion/#joesandbox_query","title":"joesandbox_query","text":"<p>Query Joe Sandbox API with a submission url to get the json report and extract its data that is parsed and converted into MISP attributes and objects.</p> <p>This url can by the way come from the result of the joesandbox_submit expansion module. - features:</p>  <p>Module using the new format of modules able to return attributes and objects.</p> <p>The module returns the same results as the import module joe_import taking directly the json report as input.</p> <p>Even if the introspection will allow all kinds of links to call this module, obviously only the ones presenting a sample or url submission in the Joe Sandbox API will return results.</p> <p>To make it work you will need to fill the 'apikey' configuration with your Joe Sandbox API key and provide a valid link as input. - input: Link of a Joe Sandbox sample or url submission. - output: MISP attributes &amp; objects parsed from the analysis report. - references: - https://www.joesecurity.org - https://www.joesandbox.com/ - requirements: jbxapi: Joe Sandbox API python3 library</p>"},{"location":"expansion/#joesandbox_submit","title":"joesandbox_submit","text":"<p>A module to submit files or URLs to Joe Sandbox for an advanced analysis, and return the link of the submission. - features:</p>  <p>The module requires a Joe Sandbox API key to submit files or URL, and returns the link of the submitted analysis.</p> <p>It is then possible, when the analysis is completed, to query the Joe Sandbox API to get the data related to the analysis, using the joesandbox_query module directly on this submission link. - input: Sample, url (or domain) to submit to Joe Sandbox for an advanced analysis. - output: Link of the report generated in Joe Sandbox. - references: - https://www.joesecurity.org - https://www.joesandbox.com/ - requirements: jbxapi: Joe Sandbox API python3 library</p>"},{"location":"expansion/#lastline_query","title":"lastline_query","text":"<p>Deprecation notice: this module will be deprecated by December 2021, please use vmware_nsx module.</p> <p>Query Lastline with an analysis link and parse the report into MISP attributes and objects. The analysis link can also be retrieved from the output of the lastline_submit expansion module. - features:</p>  <p>The module requires a Lastline Portal <code>username</code> and <code>password</code>. The module uses the new format and it is able to return MISP attributes and objects. The module returns the same results as the lastline_import import module. - input: Link to a Lastline analysis. - output: MISP attributes and objects parsed from the analysis report. - references: https://www.lastline.com</p>"},{"location":"expansion/#lastline_submit","title":"lastline_submit","text":"<p>Deprecation notice: this module will be deprecated by December 2021, please use vmware_nsx module.</p> <p>Module to submit a file or URL to Lastline. - features:</p>  <p>The module requires a Lastline Analysis <code>api_token</code> and <code>key</code>. When the analysis is completed, it is possible to import the generated report by feeding the analysis link to the lastline_query module. - input: File or URL to submit to Lastline. - output: Link to the report generated by Lastline. - references: https://www.lastline.com</p>"},{"location":"expansion/#macaddress_io","title":"macaddress_io","text":"<p>MISP hover module for macaddress.io - features:</p>  <p>This module takes a MAC address attribute as input and queries macaddress.io for additional information.</p> <p>This information contains data about: - MAC address details - Vendor details - Block details - input: MAC address MISP attribute. - output: Text containing information on the MAC address fetched from a query on macaddress.io. - references: - https://macaddress.io/ - https://github.com/CodeLineFi/maclookup-python - requirements: - maclookup: macaddress.io python library - An access to the macaddress.io API (apikey)</p>"},{"location":"expansion/#macvendors","title":"macvendors","text":"<p>Module to access Macvendors API. - features:</p>  <p>The module takes a MAC address as input and queries macvendors.com for some information about it. The API returns the name of the vendor related to the address. - input: A MAC address. - output: Additional information about the MAC address. - references: - https://macvendors.com/ - https://macvendors.com/api</p>"},{"location":"expansion/#malwarebazaar","title":"malwarebazaar","text":"<p>Query the MALWAREbazaar API to get additional information about the input hash attribute. - features:</p>  <p>The module takes a hash attribute as input and queries MALWAREbazaar's API to fetch additional data about it. The result, if the payload is known on the databases, is at least one file object describing the file the input hash is related to.</p> <p>The module is using the new format of modules able to return object since the result is one or multiple MISP object(s). - input: A hash attribute (md5, sha1 or sha256). - output: File object(s) related to the input attribute found on MALWAREbazaar databases. - references: https://bazaar.abuse.ch/</p>"},{"location":"expansion/#mmdb_lookup","title":"mmdb_lookup","text":"<p>A hover and expansion module to enrich an ip with geolocation and ASN information from an mmdb server instance, such as CIRCL's ip.circl.lu. - features:</p>  <p>The module takes an IP address related attribute as input. It queries the public CIRCL.lu mmdb-server instance, available at ip.circl.lu, by default. The module can be configured with a custom mmdb server url if required. It is also possible to filter results on 1 db_source by configuring db_source_filter. - input: An IP address attribute (for example ip-src or ip-src|port). - output: Geolocation and asn objects. - references: - https://data.public.lu/fr/datasets/geo-open-ip-address-geolocation-per-country-in-mmdb-format/ - https://github.com/adulau/mmdb-server</p>"},{"location":"expansion/#mwdb","title":"mwdb","text":"<p>Module to push malware samples to a MWDB instance - features:</p>  <p>An expansion module to push malware samples to a MWDB (https://github.com/CERT-Polska/mwdb-core) instance. This module does not push samples to a sandbox. This can be achieved via Karton (connected to the MWDB). Does: * Upload of attachment or malware sample to MWDB * Tags of events and/or attributes are added to MWDB. * Comment of the MISP attribute is added to MWDB. * A link back to the MISP event is added to MWDB via the MWDB attribute.  * A link to the MWDB attribute is added as an enrichted attribute to the MISP event. - input: Attachment or malware sample - output: Link attribute that points to the sample at the MWDB instane - requirements: * mwdblib installed (pip install mwdblib) ; * (optional) keys.py file to add tags of events/attributes to MWDB * (optional) MWDB attribute created for the link back to MISP (defined in mwdb_misp_attribute)</p>"},{"location":"expansion/#ocr_enrich","title":"ocr_enrich","text":"<p>Module to process some optical character recognition on pictures. - features:</p>  <p>The module takes an attachment attributes as input and process some optical character recognition on it. The text found is then passed to the Freetext importer to extract potential IoCs. - input: A picture attachment. - output: Text and freetext fetched from the input picture. - requirements: cv2: The OpenCV python library.</p>"},{"location":"expansion/#ods_enrich","title":"ods_enrich","text":"<p>Module to extract freetext from a .ods document. - features:</p>  <p>The module reads the text contained in a .ods document. The result is passed to the freetext import parser so IoCs can be extracted out of it. - input: Attachment attribute containing a .ods document. - output: Text and freetext parsed from the document. - requirements: - ezodf: Python package to create/manipulate OpenDocumentFormat files. - pandas_ods_reader: Python library to read in ODS files.</p>"},{"location":"expansion/#odt_enrich","title":"odt_enrich","text":"<p>Module to extract freetext from a .odt document. - features:</p>  <p>The module reads the text contained in a .odt document. The result is passed to the freetext import parser so IoCs can be extracted out of it. - input: Attachment attribute containing a .odt document. - output: Text and freetext parsed from the document. - requirements: ODT reader python library.</p>"},{"location":"expansion/#onyphe","title":"onyphe","text":"<p>Module to process a query on Onyphe. - features:</p>  <p>This module takes a domain, hostname, or IP address attribute as input in order to query the Onyphe API. Data fetched from the query is then parsed and MISP attributes are extracted. - input: A domain, hostname or IP address MISP attribute. - output: MISP attributes fetched from the Onyphe query. - references: - https://www.onyphe.io/ - https://github.com/sebdraven/pyonyphe - requirements: - onyphe python library - An access to the Onyphe API (apikey)</p>"},{"location":"expansion/#onyphe_full","title":"onyphe_full","text":"<p>Module to process a full query on Onyphe. - features:</p>  <p>This module takes a domain, hostname, or IP address attribute as input in order to query the Onyphe API. Data fetched from the query is then parsed and MISP attributes are extracted.</p> <p>The parsing is here more advanced than the one on onyphe module, and is returning more attributes, since more fields of the query result are watched and parsed. - input: A domain, hostname or IP address MISP attribute. - output: MISP attributes fetched from the Onyphe query. - references: - https://www.onyphe.io/ - https://github.com/sebdraven/pyonyphe - requirements: - onyphe python library - An access to the Onyphe API (apikey)</p>"},{"location":"expansion/#otx","title":"otx","text":"<p>Module to get information from AlienVault OTX. - features:</p>  <p>This module takes a MISP attribute as input to query the OTX Alienvault API. The API returns then the result of the query with some types we map into compatible types we add as MISP attributes. - input: A MISP attribute included in the following list: - hostname - domain - ip-src - ip-dst - md5 - sha1 - sha256 - sha512 - output: MISP attributes mapped from the result of the query on OTX, included in the following list: - domain - ip-src - ip-dst - text - md5 - sha1 - sha256 - sha512 - email - references: https://www.alienvault.com/open-threat-exchange - requirements: An access to the OTX API (apikey)</p>"},{"location":"expansion/#passivessh","title":"passivessh","text":"<p>An expansion module to query the CIRCL Passive SSH. - features:</p>  <p>The module queries the Passive SSH service from CIRCL.</p> <p>The module can be used an hover module but also an expansion model to add related MISP objects.</p> <ul> <li>input: IP addresses or SSH fingerprints</li> <li>output: SSH key materials, complementary IP addresses with similar SSH key materials</li> <li>references: https://github.com/D4-project/passive-ssh</li> </ul>"},{"location":"expansion/#passivetotal","title":"passivetotal","text":"<ul> <li>features: <p>The PassiveTotal MISP expansion module brings the datasets derived from Internet scanning directly into your MISP instance. This module supports passive DNS, historic SSL, WHOIS, and host attributes. In order to use the module, you must have a valid PassiveTotal account username and API key. Registration is free and can be done by visiting https://www.passivetotal.org/register</p>  </li> <li>input: <p>A MISP attribute included in the following list: - hostname - domain - ip-src - ip-dst - x509-fingerprint-sha1 - email-src - email-dst - target-email - whois-registrant-email - whois-registrant-phone - text - whois-registrant-name - whois-registrar - whois-creation-date</p>  </li> <li>output: <p>MISP attributes mapped from the result of the query on PassiveTotal, included in the following list: - hostname - domain - ip-src - ip-dst - x509-fingerprint-sha1 - email-src - email-dst - target-email - whois-registrant-email - whois-registrant-phone - text - whois-registrant-name - whois-registrar - whois-creation-date - md5 - sha1 - sha256 - link</p>  </li> <li>references: <p>https://www.passivetotal.org/register</p>  </li> <li>requirements: <ul> <li>Passivetotal python library</li> <li>An access to the PassiveTotal API (apikey)</li> </ul>  </li> </ul>"},{"location":"expansion/#pdf_enrich","title":"pdf_enrich","text":"<p>Module to extract freetext from a PDF document. - features:</p>  <p>The module reads the text contained in a PDF document. The result is passed to the freetext import parser so IoCs can be extracted out of it. - input: Attachment attribute containing a PDF document. - output: Text and freetext parsed from the document. - requirements: pdftotext: Python library to extract text from PDF.</p>"},{"location":"expansion/#pptx_enrich","title":"pptx_enrich","text":"<p>Module to extract freetext from a .pptx document. - features:</p>  <p>The module reads the text contained in a .pptx document. The result is passed to the freetext import parser so IoCs can be extracted out of it. - input: Attachment attribute containing a .pptx document. - output: Text and freetext parsed from the document. - requirements: pptx: Python library to read PowerPoint files.</p>"},{"location":"expansion/#qintel_qsentry","title":"qintel_qsentry","text":"<p>A hover and expansion module which queries Qintel QSentry for ip reputation data - features:</p>  <p>This module takes an ip-address (ip-src or ip-dst) attribute as input, and queries the Qintel QSentry API to retrieve ip reputation data - input: ip address attribute - ouput: Objects containing the enriched IP, threat tags, last seen attributes and associated Autonomous System information - references: https://www.qintel.com/products/qsentry/ - requirements: A Qintel API token</p>"},{"location":"expansion/#qrcode","title":"qrcode","text":"<p>Module to decode QR codes. - features:</p>  <p>The module reads the QR code and returns the related address, which can be an URL or a bitcoin address. - input: A QR code stored as attachment attribute. - output: The URL or bitcoin address the QR code is pointing to. - requirements: - cv2: The OpenCV python library. - pyzbar: Python library to read QR codes.</p>"},{"location":"expansion/#ransomcoindb","title":"ransomcoindb","text":"<ul> <li>descrption: <p>Module to access the ransomcoinDB with a hash or btc address attribute and get the associated btc address of hashes.</p>  </li> <li>features: <p>The module takes either a hash attribute or a btc attribute as input to query the ransomcoinDB API for some additional data.</p> <p>If the input is a btc address, we will get the associated hashes returned in a file MISP object. If we query ransomcoinDB with a hash, the response contains the associated btc addresses returned as single MISP btc attributes.</p>  </li> <li>input: <p>A hash (md5, sha1 or sha256) or btc attribute.</p>  </li> <li>output: <p>Hashes associated to a btc address or btc addresses associated to a hash.</p>  </li> <li>references: <p>https://ransomcoindb.concinnity-risks.com</p>  </li> <li>requirements: <p>A ransomcoinDB API key.</p>  </li> </ul>"},{"location":"expansion/#rbl","title":"rbl","text":"<p>Module to check an IPv4 address against known RBLs. - features:</p>  <p>This module takes an IP address attribute as input and queries multiple know Real-time Blackhost Lists to check if they have already seen this IP address.</p> <p>We display then all the information we get from those different sources. - input: IP address attribute. - output: Text with additional data from Real-time Blackhost Lists about the IP address. - references: RBLs list - requirements: dnspython3: DNS python3 library</p>"},{"location":"expansion/#recordedfuture","title":"recordedfuture","text":"<p>Module to enrich attributes with threat intelligence from Recorded Future. - features:</p>  <p>Enrich an attribute to add a custom enrichment object to the event. The object contains a copy of the enriched attribute with added tags presenting risk score and triggered risk rules from Recorded Future. Malware and Threat Actors related to the enriched indicator in Recorded Future is matched against MISP's galaxy clusters and applied as galaxy tags. The custom enrichment object also includes a list of related indicators from Recorded Future (IP's, domains, hashes, URL's and vulnerabilities) added as additional attributes. - input: A MISP attribute of one of the following types: ip, ip-src, ip-dst, domain, hostname, md5, sha1, sha256, uri, url, vulnerability, weakness. - output: A MISP object containing a copy of the enriched attribute with added tags from Recorded Future and a list of new attributes related to the enriched attribute. - references: https://www.recordedfuture.com/ - requirements: A Recorded Future API token.</p>"},{"location":"expansion/#reversedns","title":"reversedns","text":"<p>Simple Reverse DNS expansion service to resolve reverse DNS from MISP attributes. - features:</p>  <p>The module takes an IP address as input and tries to find the hostname this IP address is resolved into.</p> <p>The address of the DNS resolver to use is also configurable, but if no configuration is set, we use the Google public DNS address (8.8.8.8).</p> <p>Please note that composite MISP attributes containing IP addresses are supported as well. - input: An IP address attribute. - output: Hostname attribute the input is resolved into. - requirements: DNS python library</p>"},{"location":"expansion/#securitytrails","title":"securitytrails","text":"<p>An expansion modules for SecurityTrails. - features:</p>  <p>The module takes a domain, hostname or IP address attribute as input and queries the SecurityTrails API with it.</p> <p>Multiple parsing operations are then processed on the result of the query to extract a much information as possible.</p> <p>From this data extracted are then mapped MISP attributes. - input: A domain, hostname or IP address attribute. - output: MISP attributes resulting from the query on SecurityTrails API, included in the following list: - hostname - domain - ip-src - ip-dst - dns-soa-email - whois-registrant-email - whois-registrant-phone - whois-registrant-name - whois-registrar - whois-creation-date - domain - references: https://securitytrails.com/ - requirements: - dnstrails python library - An access to the SecurityTrails API (apikey)</p>"},{"location":"expansion/#shodan","title":"shodan","text":"<p>Module to query on Shodan. - features:</p>  <p>The module takes an IP address as input and queries the Shodan API to get some additional data about it. - input: An IP address MISP attribute. - output: Text with additional data about the input, resulting from the query on Shodan. - references: https://www.shodan.io/ - requirements: - shodan python library - An access to the Shodan API (apikey)</p>"},{"location":"expansion/#sigma_queries","title":"sigma_queries","text":"<p>An expansion hover module to display the result of sigma queries. - features:</p>  <p>This module takes a Sigma rule attribute as input and tries all the different queries available to convert it into different formats recognized by SIEMs. - input: A Sigma attribute. - output: Text displaying results of queries on the Sigma attribute. - references: https://github.com/Neo23x0/sigma/wiki - requirements: Sigma python library</p>"},{"location":"expansion/#sigma_syntax_validator","title":"sigma_syntax_validator","text":"<p>An expansion hover module to perform a syntax check on sigma rules. - features:</p>  <p>This module takes a Sigma rule attribute as input and performs a syntax check on it.</p> <p>It displays then that the rule is valid if it is the case, and the error related to the rule otherwise. - input: A Sigma attribute. - output: Text describing the validity of the Sigma rule. - references: https://github.com/Neo23x0/sigma/wiki - requirements: - Sigma python library - Yaml python library</p>"},{"location":"expansion/#socialscan","title":"socialscan","text":"<p>A hover module to get information on the availability of an email address or username on some online platforms. - features:</p>  <p>The module takes an email address or username as input and check its availability on some online platforms. The results for each platform are then returned to see if the email address or the username is used, available or if there is an issue with it. - input: An email address or usename attribute. - output: Text containing information about the availability of an email address or a username in some online platforms. - references: https://github.com/iojw/socialscan - requirements: The socialscan python library</p>"},{"location":"expansion/#sophoslabs_intelix","title":"sophoslabs_intelix","text":"<p>An expansion module to query the Sophoslabs intelix API to get additional information about an ip address, url, domain or sha256 attribute. - features:</p>  <p>The module takes an ip address, url, domain or sha256 attribute and queries the SophosLabs Intelix API with the attribute value. The result of this query is a SophosLabs Intelix hash report, or an ip or url lookup, that is then parsed and returned in a MISP object. - input: An ip address, url, domain or sha256 attribute. - output: SophosLabs Intelix report and lookup objects - references: https://aws.amazon.com/marketplace/pp/B07SLZPMCS - requirements: A client_id and client_secret pair to authenticate to the SophosLabs Intelix API</p>"},{"location":"expansion/#sourcecache","title":"sourcecache","text":"<p>Module to cache web pages of analysis reports, OSINT sources. The module returns a link of the cached page. - features:</p>  <p>This module takes a link or url attribute as input and caches the related web page. It returns then a link of the cached page. - input: A link or url attribute. - output: A malware-sample attribute describing the cached page. - references: https://github.com/adulau/url_archiver - requirements: urlarchiver: python library to fetch and archive URL on the file-system</p>"},{"location":"expansion/#stix2_pattern_syntax_validator","title":"stix2_pattern_syntax_validator","text":"<p>An expansion hover module to perform a syntax check on stix2 patterns. - features:</p>  <p>This module takes a STIX2 pattern attribute as input and performs a syntax check on it.</p> <p>It displays then that the rule is valid if it is the case, and the error related to the rule otherwise. - input: A STIX2 pattern attribute. - output: Text describing the validity of the STIX2 pattern. - references: STIX2.0 patterning specifications - requirements: stix2patterns python library</p>"},{"location":"expansion/#threatcrowd","title":"threatcrowd","text":"<p>Module to get information from ThreatCrowd. - features:</p>  <p>This module takes a MISP attribute as input and queries ThreatCrowd with it.</p> <p>The result of this query is then parsed and some data is mapped into MISP attributes in order to enrich the input attribute. - input: A MISP attribute included in the following list: - hostname - domain - ip-src - ip-dst - md5 - sha1 - sha256 - sha512 - whois-registrant-email - output: MISP attributes mapped from the result of the query on ThreatCrowd, included in the following list: - domain - ip-src - ip-dst - text - md5 - sha1 - sha256 - sha512 - hostname - whois-registrant-email - references: https://www.threatcrowd.org/</p>"},{"location":"expansion/#threatminer","title":"threatminer","text":"<p>Module to get information from ThreatMiner. - features:</p>  <p>This module takes a MISP attribute as input and queries ThreatMiner with it.</p> <p>The result of this query is then parsed and some data is mapped into MISP attributes in order to enrich the input attribute. - input: A MISP attribute included in the following list: - hostname - domain - ip-src - ip-dst - md5 - sha1 - sha256 - sha512 - output: MISP attributes mapped from the result of the query on ThreatMiner, included in the following list: - domain - ip-src - ip-dst - text - md5 - sha1 - sha256 - sha512 - ssdeep - authentihash - filename - whois-registrant-email - url - link - references: https://www.threatminer.org/</p>"},{"location":"expansion/#trustar_enrich","title":"trustar_enrich","text":"<p>Module to get enrich indicators with TruSTAR. - features:</p>  <p>This module enriches MISP attributes with scoring and metadata from TruSTAR.</p> <p>The TruSTAR indicator summary is appended to the attributes along with links to any associated reports. - input: Any of the following MISP attributes: - btc - domain - email-src - filename - hostname - ip-src - ip-dst - md5 - sha1 - sha256 - url - output: MISP attributes enriched with indicator summary data from the TruSTAR API. Data includes a severity level score and additional source and scoring info. - references: https://docs.trustar.co/api/v13/indicators/get_indicator_summaries.html</p>"},{"location":"expansion/#urlhaus","title":"urlhaus","text":"<p>Query of the URLhaus API to get additional information about the input attribute. - features:</p>  <p>Module using the new format of modules able to return attributes and objects.</p> <p>The module takes one of the attribute type specified as input, and query the URLhaus API with it. If any result is returned by the API, attributes and objects are created accordingly. - input: A domain, hostname, url, ip, md5 or sha256 attribute. - output: MISP attributes &amp; objects fetched from the result of the URLhaus API query. - references: https://urlhaus.abuse.ch/</p>"},{"location":"expansion/#urlscan","title":"urlscan","text":"<p>An expansion module to query urlscan.io. - features:</p>  <p>This module takes a MISP attribute as input and queries urlscan.io with it.</p> <p>The result of this query is then parsed and some data is mapped into MISP attributes in order to enrich the input attribute. - input: A domain, hostname or url attribute. - output: MISP attributes mapped from the result of the query on urlscan.io. - references: https://urlscan.io/ - requirements: An access to the urlscan.io API</p>"},{"location":"expansion/#variotdbs","title":"variotdbs","text":"<p>An expansion module to query the VARIoT db API for more information about a vulnerability. - features:</p>  <p>The module takes a vulnerability attribute as input and queries que VARIoT db API to gather additional information.</p> <p>The <code>vuln</code> endpoint is queried first to look for additional information about the vulnerability itself.</p> <p>The <code>exploits</code> endpoint is also queried then to look for the information of the potential related exploits, which are parsed and added to the results using the <code>exploit</code> object template. - input: Vulnerability attribute. - output: Additional information about the vulnerability, as it is stored on the VARIoT db, about the vulnerability itself, and the potential related exploits. - references: https://www.variotdbs.pl/ - requirements: A VARIoT db API key (if you do not want to be limited to 100 queries / day)</p>"},{"location":"expansion/#virustotal","title":"virustotal","text":"<p>Module to get advanced information from virustotal. - features:</p>  <p>New format of modules able to return attributes and objects.</p> <p>A module to take a MISP attribute as input and query the VirusTotal API to get additional data about it.</p> <p>Compared to the standard VirusTotal expansion module, this module is made for advanced parsing of VirusTotal report, with a recursive analysis of the elements found after the first request.</p> <p>Thus, it requires a higher request rate limit to avoid the API to return a 204 error (Request rate limit exceeded), and the data parsed from the different requests are returned as MISP attributes and objects, with the corresponding relations between each one of them. - input: A domain, hash (md5, sha1, sha256 or sha512), hostname or IP address attribute. - output: MISP attributes and objects resulting from the parsing of the VirusTotal report concerning the input attribute. - references: - https://www.virustotal.com/ - https://developers.virustotal.com/reference - requirements: An access to the VirusTotal API (apikey), with a high request rate limit.</p>"},{"location":"expansion/#virustotal_public","title":"virustotal_public","text":"<p>Module to get information from VirusTotal. - features:</p>  <p>New format of modules able to return attributes and objects.</p> <p>A module to take a MISP attribute as input and query the VirusTotal API to get additional data about it.</p> <p>Compared to the more advanced VirusTotal expansion module, this module is made for VirusTotal users who have a low request rate limit.</p> <p>Thus, it only queries the API once and returns the results that is parsed into MISP attributes and objects. - input: A domain, hostname, ip, url or hash (md5, sha1, sha256 or sha512) attribute. - output: MISP attributes and objects resulting from the parsing of the VirusTotal report concerning the input attribute. - references: - https://www.virustotal.com - https://developers.virustotal.com/reference - requirements: An access to the VirusTotal API (apikey)</p>"},{"location":"expansion/#vmray_submit","title":"vmray_submit","text":"<p>Module to submit a sample to VMRay. - features:</p>  <p>This module takes an attachment or malware-sample attribute as input to query the VMRay API.</p> <p>The sample contained within the attribute in then enriched with data from VMRay mapped into MISP attributes. - input: An attachment or malware-sample attribute. - output: MISP attributes mapped from the result of the query on VMRay API, included in the following list: - text - sha1 - sha256 - md5 - link - references: https://www.vmray.com/ - requirements: An access to the VMRay API (apikey &amp; url)</p>"},{"location":"expansion/#vmware_nsx","title":"vmware_nsx","text":"<p>Module to enrich a file or URL with VMware NSX Defender. - features:</p>  <p>This module takes an IoC such as file hash, file attachment, malware-sample or url as input to query VMware NSX Defender.</p> <p>The IoC is then enriched with data from VMware NSX Defender. - input: File hash, attachment or URL to be enriched with VMware NSX Defender. - output: Objects and tags generated by VMware NSX Defender. - references: https://www.vmware.com - requirements: The module requires a VMware NSX Defender Analysis <code>api_token</code> and <code>key</code>.</p>"},{"location":"expansion/#vulndb","title":"vulndb","text":"<p>Module to query VulnDB (RiskBasedSecurity.com). - features:</p>  <p>This module takes a vulnerability attribute as input and queries VulnDB in order to get some additional data about it.</p> <p>The API gives the result of the query which can be displayed in the screen, and/or mapped into MISP attributes to add in the event. - input: A vulnerability attribute. - output: Additional data enriching the CVE input, fetched from VulnDB. - references: https://vulndb.cyberriskanalytics.com/ - requirements: An access to the VulnDB API (apikey, apisecret)</p>"},{"location":"expansion/#vulners","title":"vulners","text":"<p>An expansion hover module to expand information about CVE id using Vulners API. - features:</p>  <p>This module takes a vulnerability attribute as input and queries the Vulners API in order to get some additional data about it.</p> <p>The API then returns details about the vulnerability. - input: A vulnerability attribute. - output: Text giving additional information about the CVE in input. - references: https://vulners.com/ - requirements: - Vulners python library - An access to the Vulners API</p>"},{"location":"expansion/#whois","title":"whois","text":"<p>Module to query a local instance of uwhois (https://github.com/rafiot/uwhoisd). - features:</p>  <p>This module takes a domain or IP address attribute as input and queries a 'Univseral Whois proxy server' to get the correct details of the Whois query on the input value (check the references for more details about this whois server). - input: A domain or IP address attribute. - output: Text describing the result of a whois request for the input value. - references: https://github.com/rafiot/uwhoisd - requirements: uwhois: A whois python library</p>"},{"location":"expansion/#wiki","title":"wiki","text":"<p>An expansion hover module to extract information from Wikidata to have additional information about particular term for analysis. - features:</p>  <p>This module takes a text attribute as input and queries the Wikidata API. If the text attribute is clear enough to define a specific term, the API returns a wikidata link in response. - input: Text attribute. - output: Text attribute. - references: https://www.wikidata.org - requirements: SPARQLWrapper python library</p>"},{"location":"expansion/#xforceexchange","title":"xforceexchange","text":"<p>An expansion module for IBM X-Force Exchange. - features:</p>  <p>This module takes a MISP attribute as input to query the X-Force API. The API returns then additional information known in their threats data, that is mapped into MISP attributes. - input: A MISP attribute included in the following list: - ip-src - ip-dst - vulnerability - md5 - sha1 - sha256 - output: MISP attributes mapped from the result of the query on X-Force Exchange. - references: https://exchange.xforce.ibmcloud.com/ - requirements: An access to the X-Force API (apikey)</p>"},{"location":"expansion/#xlsx_enrich","title":"xlsx_enrich","text":"<p>Module to extract freetext from a .xlsx document. - features:</p>  <p>The module reads the text contained in a .xlsx document. The result is passed to the freetext import parser so IoCs can be extracted out of it. - input: Attachment attribute containing a .xlsx document. - output: Text and freetext parsed from the document. - requirements: pandas: Python library to perform data analysis, time series and statistics.</p>"},{"location":"expansion/#yara_query","title":"yara_query","text":"<p>An expansion &amp; hover module to translate any hash attribute into a yara rule. - features:</p>  <p>The module takes a hash attribute (md5, sha1, sha256, imphash) as input, and is returning a YARA rule from it. This YARA rule is also validated using the same method as in 'yara_syntax_validator' module. Both hover and expansion functionalities are supported with this module, where the hover part is displaying the resulting YARA rule and the expansion part allows you to add the rule as a new attribute, as usual with expansion modules. - input: MISP Hash attribute (md5, sha1, sha256, imphash, or any of the composite attribute with filename and one of the previous hash type). - output: YARA rule. - references: - https://virustotal.github.io/yara/ - https://github.com/virustotal/yara-python - requirements: yara-python python library</p>"},{"location":"expansion/#yara_syntax_validator","title":"yara_syntax_validator","text":"<p>An expansion hover module to perform a syntax check on if yara rules are valid or not. - features:</p>  <p>This modules simply takes a YARA rule as input, and checks its syntax. It returns then a confirmation if the syntax is valid, otherwise the syntax error is displayed. - input: YARA rule attribute. - output: Text to inform users if their rule is valid. - references: http://virustotal.github.io/yara/ - requirements: yara_python python library</p>"},{"location":"expansion/#yeti","title":"yeti","text":"<p>Module to process a query on Yeti. - features:</p>  <p>This module add context and links between observables using yeti - input: A domain, hostname,IP, sha256,sha1, md5, url of MISP attribute. - output: MISP attributes and objects fetched from the Yeti instances. - references: - https://github.com/yeti-platform/yeti - https://github.com/sebdraven/pyeti - requirements: - pyeti - API key </p>"},{"location":"export_mod/","title":"Export Modules","text":""},{"location":"export_mod/#cef_export","title":"cef_export","text":"<p>Module to export a MISP event in CEF format. - features:</p>  <p>The module takes a MISP event in input, to look every attribute. Each attribute matching with some predefined types is then exported in Common Event Format. Thus, there is no particular feature concerning MISP Events since any event can be exported. However, 4 configuration parameters recognized by CEF format are required and should be provided by users before exporting data: the device vendor, product and version, as well as the default severity of data. - input: MISP Event attributes - output: Common Event Format file - references: https://community.softwaregrp.com/t5/ArcSight-Connectors/ArcSight-Common-Event-Format-CEF-Guide/ta-p/1589306?attachment-id=65537</p>"},{"location":"export_mod/#cisco_firesight_manager_acl_rule_export","title":"cisco_firesight_manager_ACL_rule_export","text":"<p>Module to export malicious network activity attributes to Cisco fireSIGHT manager block rules. - features:</p>  <p>The module goes through the attributes to find all the network activity ones in order to create block rules for the Cisco fireSIGHT manager. - input: Network activity attributes (IPs, URLs). - output: Cisco fireSIGHT manager block rules. - requirements: Firesight manager console credentials</p>"},{"location":"export_mod/#defender_endpoint_export","title":"defender_endpoint_export","text":"<p>Defender for Endpoint KQL hunting query export module - features:</p>  <p>This module export an event as Defender for Endpoint KQL queries that can then be used in your own python3 or Powershell tool. If you are using Microsoft Sentinel, you can directly connect your MISP instance to Sentinel and then create queries using the <code>ThreatIntelligenceIndicator</code> table to match events against imported IOC. - input: MISP Event attributes - output: Defender for Endpoint KQL queries - references: https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/advanced-hunting-schema-reference</p>"},{"location":"export_mod/#goamlexport","title":"goamlexport","text":"<p>This module is used to export MISP events containing transaction objects into GoAML format. - features:</p>  <p>The module works as long as there is at least one transaction object in the Event.</p> <p>Then in order to have a valid GoAML document, please follow these guidelines: - For each transaction object, use either a bank-account, person, or legal-entity object to describe the origin of the transaction, and again one of them to describe the target of the transaction. - Create an object reference for both origin and target objects of the transaction. - A bank-account object needs a signatory, which is a person object, put as object reference of the bank-account. - A person can have an address, which is a geolocation object, put as object reference of the person.</p> <p>Supported relation types for object references that are recommended for each object are the folowing: - transaction:   - 'from', 'from_my_client': Origin of the transaction - at least one of them is required.   - 'to', 'to_my_client': Target of the transaction - at least one of them is required.   - 'address': Location of the transaction - optional. - bank-account:   - 'signatory': Signatory of a bank-account - the reference from bank-account to a signatory is required, but the relation-type is optional at the moment since this reference will always describe a signatory.   - 'entity': Entity owning the bank account - optional. - person:   - 'address': Address of a person - optional. - input: MISP objects (transaction, bank-account, person, legal-entity, geolocation), with references, describing financial transactions and their origin and target. - output: GoAML format file, describing financial transactions, with their origin and target (bank accounts, persons or entities). - references: http://goaml.unodc.org/ - requirements: - PyMISP - MISP objects</p>"},{"location":"export_mod/#liteexport","title":"liteexport","text":"<p>Lite export of a MISP event. - features:</p>  <p>This module is simply producing a json MISP event format file, but exporting only Attributes from the Event. Thus, MISP Events exported with this module should have attributes that are not internal references, otherwise the resulting event would be empty. - input: MISP Event attributes - output: Lite MISP Event</p>"},{"location":"export_mod/#mass_eql_export","title":"mass_eql_export","text":"<p>Mass EQL query export for a MISP event. - features:</p>  <p>This module produces EQL queries for all relevant attributes in a MISP event. - input: MISP Event attributes - output: Text file containing one or more EQL queries - references: https://eql.readthedocs.io/en/latest/</p>"},{"location":"export_mod/#nexthinkexport","title":"nexthinkexport","text":"<p>Nexthink NXQL query export module - features:</p>  <p>This module export an event as Nexthink NXQL queries that can then be used in your own python3 tool or from wget/powershell - input: MISP Event attributes - output: Nexthink NXQL queries - references: https://doc.nexthink.com/Documentation/Nexthink/latest/APIAndIntegrations/IntroducingtheWebAPIV2</p>"},{"location":"export_mod/#osqueryexport","title":"osqueryexport","text":"<p>OSQuery export of a MISP event. - features:</p>  <p>This module export an event as osquery queries that can be used in packs or in fleet management solution like Kolide. - input: MISP Event attributes - output: osquery SQL queries</p>"},{"location":"export_mod/#pdfexport","title":"pdfexport","text":"<p>Simple export of a MISP event to PDF. - features:</p>  <p>The module takes care of the PDF file building, and work with any MISP Event. Except the requirement of reportlab, used to create the file, there is no special feature concerning the Event. Some parameters can be given through the config dict. 'MISP_base_url_for_dynamic_link' is your MISP URL, to attach an hyperlink to your event on your MISP instance from the PDF. Keep it clear to avoid hyperlinks in the generated pdf.  'MISP_name_for_metadata' is your CERT or MISP instance name. Used as text in the PDF' metadata  'Activate_textual_description' is a boolean (True or void) to activate the textual description/header abstract of an event  'Activate_galaxy_description' is a boolean (True or void) to activate the description of event related galaxies.  'Activate_related_events' is a boolean (True or void) to activate the description of related event. Be aware this might leak information on confidential events linked to the current event !  'Activate_internationalization_fonts' is a boolean (True or void) to activate Noto fonts instead of default fonts (Helvetica). This allows the support of CJK alphabet. Be sure to have followed the procedure to download Noto fonts (~70Mo) in the right place (/tools/pdf_fonts/Noto_TTF), to allow PyMisp to find and use them during PDF generation.  'Custom_fonts_path' is a text (path or void) to the TTF file of your choice, to create the PDF with it. Be aware the PDF won't support bold/italic/special style anymore with this option  - input: MISP Event - output: MISP Event in a PDF file. - references: https://acrobat.adobe.com/us/en/acrobat/about-adobe-pdf.html - requirements: - PyMISP - reportlab</p>"},{"location":"export_mod/#testexport","title":"testexport","text":"<p>Skeleton export module.</p>"},{"location":"export_mod/#threatstream_misp_export","title":"threatStream_misp_export","text":"<p>Module to export a structured CSV file for uploading to threatStream. - features:</p>  <p>The module takes a MISP event in input, to look every attribute. Each attribute matching with some predefined types is then exported in a CSV format recognized by ThreatStream. - input: MISP Event attributes - output: ThreatStream CSV format file - references: - https://www.anomali.com/platform/threatstream - https://github.com/threatstream - requirements: csv</p>"},{"location":"export_mod/#threat_connect_export","title":"threat_connect_export","text":"<p>Module to export a structured CSV file for uploading to ThreatConnect. - features:</p>  <p>The module takes a MISP event in input, to look every attribute. Each attribute matching with some predefined types is then exported in a CSV format recognized by ThreatConnect. Users should then provide, as module configuration, the source of data they export, because it is required by the output format. - input: MISP Event attributes - output: ThreatConnect CSV format file - references: https://www.threatconnect.com - requirements: csv</p>"},{"location":"export_mod/#virustotal_collections","title":"virustotal_collections","text":"<p>Creates a VT Collection from an event iocs. - features:</p>  <p>This export module which takes advantage of a new endpoint in VT APIv3 to create VT Collections from IOCs contained in a MISP event. With this module users will be able to create a collection just using the Download as... button. - input: A domain, hash (md5, sha1, sha256 or sha512), hostname, url or IP address attribute. - output: A VirusTotal collection in VT. - references: - https://www.virustotal.com/ - https://blog.virustotal.com/2021/11/introducing-virustotal-collections.html - requirements: An access to the VirusTotal API (apikey).</p>"},{"location":"export_mod/#vt_graph","title":"vt_graph","text":"<p>This module is used to create a VirusTotal Graph from a MISP event. - features:</p>  <p>The module takes the MISP event as input and queries the VirusTotal Graph API to create a new graph out of the event.</p> <p>Once the graph is ready, we get the url of it, which is returned so we can view it on VirusTotal. - input: A MISP event. - output: Link of the VirusTotal Graph created for the event. - references: https://www.virustotal.com/gui/graph-overview - requirements: vt_graph_api, the python library to query the VirusTotal graph API</p>"},{"location":"import_mod/","title":"Import Modules","text":""},{"location":"import_mod/#cof2misp","title":"cof2misp","text":"<p>Passive DNS Common Output Format (COF) MISP importer - features:</p>  <p>Takes as input a valid COF file or the output of the dnsdbflex utility and creates MISP objects for the input. - input: Passive DNS output in Common Output Format (COF) - output: MISP objects - references: https://tools.ietf.org/id/draft-dulaunoy-dnsop-passive-dns-cof-08.html - requirements: PyMISP</p>"},{"location":"import_mod/#csvimport","title":"csvimport","text":"<p>Module to import MISP attributes from a csv file. - features:</p>  <p>In order to parse data from a csv file, a header is required to let the module know which column is matching with known attribute fields / MISP types.</p> <p>This header either comes from the csv file itself or is part of the configuration of the module and should be filled out in MISP plugin settings, each field separated by COMMAS. Fields that do not match with any type known in MISP or are not MISP attribute fields should be ignored in import, using a space or simply nothing between two separators (example: 'ip-src, , comment, ').</p> <p>If the csv file already contains a header that does not start by a '#', you should tick the checkbox 'has_header' to avoid importing it and have potential issues. You can also redefine the header even if it is already contained in the file, by following the rules for headers explained earlier. One reason why you would redefine a header is for instance when you want to skip some fields, or some fields are not valid types. - input: CSV format file. - output: MISP Event attributes - references: - https://tools.ietf.org/html/rfc4180 - https://tools.ietf.org/html/rfc7111 - requirements: PyMISP</p>"},{"location":"import_mod/#cuckooimport","title":"cuckooimport","text":"<p>Module to import Cuckoo JSON. - features:</p>  <p>The module simply imports MISP Attributes from a Cuckoo JSON format file. There is thus no special feature to make it work. - input: Cuckoo JSON file - output: MISP Event attributes - references: - https://cuckoosandbox.org/ - https://github.com/cuckoosandbox/cuckoo</p>"},{"location":"import_mod/#email_import","title":"email_import","text":"<p>Module to import emails in MISP. - features:</p>  <p>This module can be used to import e-mail text as well as attachments and urls. 3 configuration parameters are then used to unzip attachments, guess zip attachment passwords, and extract urls: set each one of them to True or False to process or not the respective corresponding actions. - input: E-mail file - output: MISP Event attributes</p>"},{"location":"import_mod/#goamlimport","title":"goamlimport","text":"<p>Module to import MISP objects about financial transactions from GoAML files. - features:</p>  <p>Unlike the GoAML export module, there is here no special feature to import data from GoAML external files, since the module will import MISP Objects with their References on its own, as it is required for the export module to rebuild a valid GoAML document. - input: GoAML format file, describing financial transactions, with their origin and target (bank accounts, persons or entities). - output: MISP objects (transaction, bank-account, person, legal-entity, geolocation), with references, describing financial transactions and their origin and target. - references: http://goaml.unodc.org/ - requirements: PyMISP</p>"},{"location":"import_mod/#joe_import","title":"joe_import","text":"<p>A module to import data from a Joe Sandbox analysis json report. - features:</p>  <p>Module using the new format of modules able to return attributes and objects.</p> <p>The module returns the same results as the expansion module joesandbox_query using the submission link of the analysis to get the json report. - input: Json report of a Joe Sandbox analysis. - output: MISP attributes &amp; objects parsed from the analysis report. - references: - https://www.joesecurity.org - https://www.joesandbox.com/</p>"},{"location":"import_mod/#lastline_import","title":"lastline_import","text":"<p>Deprecation notice: this module will be deprecated by December 2021, please use vmware_nsx module.</p> <p>Module to import and parse reports from Lastline analysis links. - features:</p>  <p>The module requires a Lastline Portal <code>username</code> and <code>password</code>. The module uses the new format and it is able to return MISP attributes and objects. The module returns the same results as the lastline_query expansion module. - input: Link to a Lastline analysis. - output: MISP attributes and objects parsed from the analysis report. - references: https://www.lastline.com</p>"},{"location":"import_mod/#mispjson","title":"mispjson","text":"<p>Module to import MISP JSON format for merging MISP events. - features:</p>  <p>The module simply imports MISP Attributes from an other MISP Event in order to merge events together. There is thus no special feature to make it work. - input: MISP Event - output: MISP Event attributes</p>"},{"location":"import_mod/#ocr","title":"ocr","text":"<p>Optical Character Recognition (OCR) module for MISP. - features:</p>  <p>The module tries to recognize some text from an image and import the result as a freetext attribute, there is then no special feature asked to users to make it work. - input: Image - output: freetext MISP attribute</p>"},{"location":"import_mod/#openiocimport","title":"openiocimport","text":"<p>Module to import OpenIOC packages. - features:</p>  <p>The module imports MISP Attributes from OpenIOC packages, there is then no special feature for users to make it work. - input: OpenIOC packages - output: MISP Event attributes - references: https://www.fireeye.com/blog/threat-research/2013/10/openioc-basics.html - requirements: PyMISP</p>"},{"location":"import_mod/#threatanalyzer_import","title":"threatanalyzer_import","text":"<p>Module to import ThreatAnalyzer archive.zip / analysis.json files. - features:</p>  <p>The module imports MISP Attributes from a ThreatAnalyzer format file. This file can be either ZIP, or JSON format. There is by the way no special feature for users to make the module work. - input: ThreatAnalyzer format file - output: MISP Event attributes - references: https://www.threattrack.com/malware-analysis.aspx</p>"},{"location":"import_mod/#vmray_import","title":"vmray_import","text":"<p>Module to import VMRay (VTI) results. - features:</p>  <p>The module imports MISP Attributes from VMRay format, using the VMRay api. Users should then provide as the module configuration the API Key as well as the server url in order to fetch their data to import. - input: VMRay format - output: MISP Event attributes - references: https://www.vmray.com/ - requirements: vmray_rest_api</p>"},{"location":"install/","title":"Install Guides","text":""},{"location":"install/#how-to-install-and-start-misp-modules-in-a-python-virtualenv","title":"How to install and start MISP modules (in a Python virtualenv)?","text":"<pre><code>SUDO_WWW=\"sudo -u www-data\"\n\nsudo apt-get install -y \\\n  git \\\n  libpq5 \\\n  libjpeg-dev \\\n  tesseract-ocr \\\n  libpoppler-cpp-dev \\\n  imagemagick virtualenv \\\n  libopencv-dev \\\n  zbar-tools \\\n  libzbar0 \\\n  libzbar-dev \\\n  libfuzzy-dev \\\n  libcaca-dev\n\n# BEGIN with virtualenv:   \n$SUDO_WWW virtualenv -p python3 /var/www/MISP/venv\n# END with virtualenv\n\ncd /usr/local/src/\n# Ideally you add your user to the staff group and make /usr/local/src group writeable, below follows an example with user misp\nsudo adduser misp staff\nsudo chmod 2775 /usr/local/src\nsudo chown root:staff /usr/local/src\ngit clone https://github.com/MISP/misp-modules.git\ngit clone git://github.com/stricaud/faup.git faup\ngit clone git://github.com/stricaud/gtcaca.git gtcaca\n\n# Install gtcaca/faup\ncd gtcaca\nmkdir -p build\ncd build\ncmake .. &amp;&amp; make\nsudo make install\ncd ../../faup\nmkdir -p build\ncd build\ncmake .. &amp;&amp; make\nsudo make install\nsudo ldconfig\n\ncd ../../misp-modules\n\n# BEGIN with virtualenv: \n$SUDO_WWW  /var/www/MISP/venv/bin/pip install -I -r REQUIREMENTS\n$SUDO_WWW  /var/www/MISP/venv/bin/pip install .\n# END with virtualenv\n\n# BEGIN without virtualenv: \nsudo pip install -I -r REQUIREMENTS\nsudo pip install .\n# END without virtualenv\n\n# Start misp-modules as a service\nsudo cp etc/systemd/system/misp-modules.service /etc/systemd/system/\nsudo systemctl daemon-reload\nsudo systemctl enable --now misp-modules\n/var/www/MISP/venv/bin/misp-modules -l 127.0.0.1 -s &amp; #to start the modules\n</code></pre>"},{"location":"install/#how-to-install-and-start-misp-modules-on-rhel-based-distributions","title":"How to install and start MISP modules on RHEL-based distributions ?","text":"<p>As of this writing, the official RHEL repositories only contain Ruby 2.0.0 and Ruby 2.1 or higher is required. As such, this guide installs Ruby 2.2 from the SCL repository.</p> <pre><code>SUDO_WWW=\"sudo -u apache\"\nsudo yum install \\\n  rh-ruby22 \\\n  openjpeg-devel \\\n  rubygem-rouge \\\n  rubygem-asciidoctor \\\n  zbar-devel \\\n  opencv-devel \\\n  gcc-c++ \\\n  pkgconfig \\\n  poppler-cpp-devel \\\n  python-devel \\\n  redhat-rpm-config\ncd /usr/local/src/\nsudo git clone https://github.com/MISP/misp-modules.git\ncd misp-modules\n$SUDO_WWW /usr/bin/scl enable rh-python36 \"virtualenv -p python3 /var/www/MISP/venv\"\n$SUDO_WWW /var/www/MISP/venv/bin/pip install -U -I -r REQUIREMENTS\n$SUDO_WWW /var/www/MISP/venv/bin/pip install -U .\n</code></pre> <p>Create the service file /etc/systemd/system/misp-modules.service :</p> <pre><code>echo \"[Unit]\nDescription=MISP's modules\nAfter=misp-workers.service\n\n[Service]\nType=simple\nUser=apache\nGroup=apache\nExecStart=/usr/bin/scl enable rh-python36 rh-ruby22  '/var/www/MISP/venv/bin/misp-modules \u2013l 127.0.0.1 \u2013s'\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/misp-modules.service\n</code></pre> <p>The After=misp-workers.service must be changed or removed if you have not created a misp-workers service. Then, enable the misp-modules service and start it:</p> <pre><code>systemctl daemon-reload\nsystemctl enable --now misp-modules\n</code></pre>"},{"location":"install/#how-to-use-an-misp-modules-docker-container","title":"How to use an MISP modules Docker container","text":""},{"location":"install/#docker-build","title":"Docker build","text":"<pre><code>docker build -t misp-modules \\\n    --build-arg BUILD_DATE=$(date -u +\"%Y-%m-%d\") \\\n  docker/\n</code></pre>"},{"location":"install/#docker-run","title":"Docker run","text":"<pre><code># Start Redis\ndocker run --rm -d --name=misp-redis redis:alpine\n# Start MISP-modules\ndocker run \\\n    --rm -d --name=misp-modules \\\n    -e REDIS_BACKEND=misp-redis \\\n    -e REDIS_PORT=\"6379\" \\\n    -e REDIS_PW=\"\" \\\n    -e REDIS_DATABASE=\"245\" \\\n    -e MISP_MODULES_DEBUG=\"false\" \\\n    dcso/misp-dockerized-misp-modules\n</code></pre>"},{"location":"install/#docker-compose","title":"Docker-compose","text":"<pre><code>services:\n  misp-modules:\n    # https://hub.docker.com/r/dcso/misp-dockerized-misp-modules\n    image: dcso/misp-dockerized-misp-modules:3\n\n    # Local image:\n    #image: misp-modules\n    #build:\n    #  context: docker/\n\n    environment:\n      # Redis\n      REDIS_BACKEND: misp-redis\n      REDIS_PORT: \"6379\"\n      REDIS_DATABASE: \"245\"\n      # System PROXY (OPTIONAL)\n      http_proxy: \n      https_proxy: \n      no_proxy: 0.0.0.0\n      # Timezone (OPTIONAL)\n      TZ: Europe/Berlin\n      # MISP-Modules (OPTIONAL)\n      MISP_MODULES_DEBUG: \"false\"\n      # Logging options (OPTIONAL)\n      LOG_SYSLOG_ENABLED: \"no\"\n  misp-redis:\n    # https://hub.docker.com/_/redis or alternative https://hub.docker.com/r/dcso/misp-dockerized-redis/\n    image: redis:alpine\n</code></pre>"},{"location":"install/#install-misp-module-on-an-offline-instance","title":"Install misp-module on an offline instance.","text":"<p>First, you need to grab all necessary packages for example like this :</p> <p>Use pip wheel to create an archive <pre><code>mkdir misp-modules-offline\npip3 wheel -r REQUIREMENTS shodan --wheel-dir=./misp-modules-offline\ntar -cjvf misp-module-bundeled.tar.bz2 ./misp-modules-offline/*\n</code></pre> On offline machine : <pre><code>mkdir misp-modules-bundle\ntar xvf misp-module-bundeled.tar.bz2 -C misp-modules-bundle\ncd misp-modules-bundle\nls -1|while read line; do sudo pip3 install --force-reinstall --ignore-installed --upgrade --no-index --no-deps ${line};done\n</code></pre> Next you can follow standard install procedure.</p>"},{"location":"license/","title":"License","text":"<pre><code>                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007\n</code></pre> <p>Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.</p> <pre><code>                        Preamble\n</code></pre> <p>The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.</p> <p>A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.</p> <p>The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.</p> <p>An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p> <pre><code>                   TERMS AND CONDITIONS\n</code></pre> <ol> <li>Definitions.</li> </ol> <p>\"This License\" refers to version 3 of the GNU Affero General Public License.</p> <p>\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\"The Program\" refers to any copyrightable work licensed under this License.  Each licensee is addressed as \"you\".  \"Licensees\" and \"recipients\" may be individuals or organizations.</p> <p>To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.</p> <p>A \"covered work\" means either the unmodified Program or a work based on the Program.</p> <p>To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p> <ol> <li>Source Code.</li> </ol> <p>The \"source code\" for a work means the preferred form of the work for making modifications to it.  \"Object code\" means any non-source form of a work.</p> <p>A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p> <ol> <li>Basic Permissions.</li> </ol> <p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p> <ol> <li>Protecting Users' Legal Rights From Anti-Circumvention Law.</li> </ol> <p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p> <ol> <li>Conveying Verbatim Copies.</li> </ol> <p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p> <ol> <li>Conveying Modified Source Versions.</li> </ol> <p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <pre><code>a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n</code></pre> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p> <ol> <li>Conveying Non-Source Forms.</li> </ol> <p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <pre><code>a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n</code></pre> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p> <ol> <li>Additional Terms.</li> </ol> <p>\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <pre><code>a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n</code></pre> <p>All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p> <ol> <li>Termination.</li> </ol> <p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p> <ol> <li>Acceptance Not Required for Having Copies.</li> </ol> <p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p> <ol> <li>Automatic Licensing of Downstream Recipients.</li> </ol> <p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p> <ol> <li>Patents.</li> </ol> <p>A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \"contributor version\".</p> <p>A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p> <ol> <li>No Surrender of Others' Freedom.</li> </ol> <p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p> <ol> <li>Remote Network Interaction; Use with the GNU General Public License.</li> </ol> <p>Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.</p> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.</p> <ol> <li>Revised Versions of this License.</li> </ol> <p>The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p> <ol> <li>Disclaimer of Warranty.</li> </ol> <p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p> <ol> <li>Limitation of Liability.</li> </ol> <p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <ol> <li>Interpretation of Sections 15 and 16.</li> </ol> <p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <pre><code>                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\n</code></pre> <p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a \"Source\" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see http://www.gnu.org/licenses/.</p>"}]}